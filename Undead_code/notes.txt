ebp/rbp = frame pointer
esp/rsp = stack pointer

rbp = 0x00007fffffffdee0
rsp = 0x00007fffffffd930

possible return addr
0x000000000040065c

 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24
 00   00   7f   ff   f7   a4   42   f0
 00   00   00   00   00   40   06   5c
 addr of last instruction before segfault 0x0000000008048494 main+49 mov    %eax,-0xc(%ebp)



edi 0x08048350
eip 0x08048492
      08048474 main+17
x/4xw $sp




0x000000000804846e main+11 mov    %esp,%ebp
0x0000000008048470 main+13 push   %ecx
0x0000000008048471 main+14 sub    $0x14,%esp
0x0000000008048474 main+17 movl   $0x0,-0xc(%ebp)
0x000000000804847b main+24 sub    $0x8,%esp
0x000000000804847e main+27 push   $0x804844b
0x0000000008048483 main+32 push   $0xb
0x0000000008048485 main+34 call   0x8048310 <signal@plt>
0x000000000804848a main+39 add    $0x10,%esp
0x000000000804848d main+42 mov    $0x0,%eax
0x0000000008048492 main+47 mov    (%eax),%eax
0x0000000008048494 main+49 mov    %eax,-0xc(%ebp)
0x0000000008048497 main+52 sub    $0xc,%esp
0x000000000804849a main+55 push   $0x804854c


08048492 < segfault here


printf("I live again!\n");
0x000000000804847b main+24 sub    $0xc,%esp
0x000000000804847e main+27 push   $0x804855c    << address of the string
0x0000000008048483 main+32 call   0x8048320 <puts@plt>
0x0000000008048488 main+37 add    $0x10,%esp


080484a7 << the address i need to return to
